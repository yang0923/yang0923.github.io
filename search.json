[{"title":"Hello World","url":"/2020/09/21/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new posthexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun serverhexo server\n\nMore info: Server\nGenerate static fileshexo generate\n\nMore info: Generating\nDeploy to remote siteshexo deploy\n\nMore info: Deployment\n","categories":["Hexo"],"tags":["Hexo"]},{"title":"numpy相关","url":"/2025/07/03/numpy%E7%9B%B8%E5%85%B3/","content":"1. 高维ndarray，报错：超出存储，如何解决？分块处理：将数据分成较小的块来处理，而不是一次性加载整个数据集。这样可以减少对内存的需求。\n使用Dask并行计算库\nimport dask.array as da# 创建一个 Dask 数组data = da.random.random((5, 50, 300, 100, 30, 49), chunks=(1, 10, 100, 50, 10, 10))# 对每个块进行处理def process_block(block):    # 在这里对块进行处理    print(f&quot;Processing block with shape &#123;block.shape&#125;&quot;)# 使用 Dask 计算data.map_blocks(process_block).compute()\n\n使用Zarr库\nimport zarrimport numpy as np# 创建一个 Zarr 数组data = zarr.zeros((5, 50, 300, 100, 30, 49), chunks=(1, 10, 100, 50, 10, 10), dtype=np.float64)# 对每个块进行处理def process_block(block):    # 在这里对块进行处理    print(f&quot;Processing block with shape &#123;block.shape&#125;&quot;)# 使用 Zarr 的块读取for block in data.iter_chunks():    process_block(block)\n\n","categories":["python"],"tags":["numpy"]}]